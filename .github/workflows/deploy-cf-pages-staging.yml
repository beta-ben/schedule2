name: Deploy Staging to Cloudflare Pages

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Prepare staging env
        run: |
          # If a repo-level override is provided, write it to .env.production
          if [ -n "${{ secrets.VITE_SCHEDULE_API_BASE_STAGING }}" ]; then
            echo "VITE_SCHEDULE_API_BASE=${{ secrets.VITE_SCHEDULE_API_BASE_STAGING }}" > .env.production
          elif [ -f .env.production.staging ]; then
            cp .env.production.staging .env.production
          else
            # Fallback to workers.dev default used in the repo
            echo "VITE_SCHEDULE_API_BASE=https://team-schedule-api.phorbie.workers.dev" > .env.production
          fi

      - name: Build
        run: npm run build

      - name: Ensure Cloudflare Pages project exists (idempotent)
        run: |
          npx --yes wrangler@3 pages project create "${{ secrets.CF_PAGES_PROJECT_NAME }}" \
            --production-branch=staging --no-interactive || true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Ensure custom domain attached (idempotent)
        run: |
          DOMAIN="staging.teamschedule.cc"
          npx --yes wrangler@3 pages domain add "${{ secrets.CF_PAGES_PROJECT_NAME }}" "$DOMAIN" --no-interactive || true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

      - name: Publish to Cloudflare Pages (staging)
        run: |
          npx --yes wrangler@3 pages deploy ./dist --project-name "${{ secrets.CF_PAGES_PROJECT_NAME }}" --branch staging --commit-dirty=true
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
